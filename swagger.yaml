---
openapi: 3.1.0
info:
  title: EconomyYakki Server API 문서
  description: EconomyYakki Server API Documentation
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Generated server url
security:
  - JWT: []
tags:
  - name: QuizQuestion
    description: 퀴즈 생성, 제출, 정답 확인 API
  - name: Auth
    description: 로그인, 로그아웃, 토큰 재발급 API
  - name: User
    description: 회원가입, USER 관련 API
  - name: QuizCategory
    description: 퀴즈 카테고리 선택 API
  - name: MyProfile
    description: 사용자 개인정보 확인, 업데이트 API
paths:
  '/api/user/signup':
    post:
      tags:
        - User
      summary: 회원가입
      description: 회원가입 요청을 처리합니다.
      operationId: signUp
      requestBody:
        content:
          application/json:
            schema:
              '$ref': '#/components/schemas/SignUp'
        required: true
      responses:
        '201':
          description: 회원가입이 완료되었습니다.
          content:
            '*/*':
              schema:
                '$ref': '#/components/schemas/SignUp'
        '400':
          description: 잘못된 요청입니다. (Bad Request)
          content:
            '*/*':
              schema:
                '$ref': '#/components/schemas/SignUp'
        '409':
          description: 이미 존재하는 사용자입니다. (Conflict)
          content:
            '*/*':
              schema:
                '$ref': '#/components/schemas/SignUp'
        '500':
          description: 서버 오류가 발생했습니다. (Internal Server Error)
          content:
            '*/*':
              schema:
                '$ref': '#/components/schemas/SignUp'
  '/api/quiz/submit-answer/{questionId}':
    post:
      tags:
        - QuizQuestion
      summary: 퀴즈 제출
      description: 퀴즈 답변을 제출하고 결과를 확인합니다.
      operationId: submitAnswer
      parameters:
        - name: questionId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: selectedOption
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 퀴즈 정답 처리 성공
          content:
            '*/*':
              schema:
                '$ref': '#/components/schemas/QuizQuestionAnswerResponse'
        '400':
          description: 잘못된 문제 ID, 이메일, 혹은 이미 제출된 답변
          content:
            '*/*':
              schema:
                '$ref': '#/components/schemas/QuizQuestionAnswerResponse'
        '401':
          description: 인증 실패 - 토큰 누락 또는 유효하지 않음
          content:
            '*/*':
              schema:
                '$ref': '#/components/schemas/QuizQuestionAnswerResponse'
        '500':
          description: 서버 오류 발생
          content:
            '*/*':
              schema:
                '$ref': '#/components/schemas/QuizQuestionAnswerResponse'
  '/api/quiz/start-quiz':
    post:
      tags:
        - QuizQuestion
      summary: 퀴즈 생성
      description: 카테고리 ID를 받아 퀴즈 문제를 생성합니다.
      operationId: startQuiz
      requestBody:
        content:
          application/json:
            schema:
              '$ref': '#/components/schemas/QuizQuestionRequest'
        required: true
      responses:
        '200':
          description: 퀴즈 문제 생성 성공
          content:
            '*/*':
              schema:
                type: array
                items:
                  '$ref': '#/components/schemas/QuizQuestionResponse'
        '400':
          description: 존재하지 않는 카테고리 또는 퀴즈 데이터 없음
          content:
            '*/*':
              schema:
                type: array
                items:
                  '$ref': '#/components/schemas/QuizQuestionResponse'
        '500':
          description: 서버 오류 발생
          content:
            '*/*':
              schema:
                type: array
                items:
                  '$ref': '#/components/schemas/QuizQuestionResponse'
  '/api/auth/refresh':
    post:
      tags:
        - Auth
      summary: 토큰 갱신
      description: 헤더에 있는 리프레시 토큰으로 새로운 토큰을 발급합니다.
      operationId: refreshToken
      responses:
        '401':
          description: 유효하지 않은 리프레시 토큰입니다.
          content:
            '*/*':
              schema:
                '$ref': '#/components/schemas/RefreshToken'
        '403':
          description: 접근 권한이 없습니다.
          content:
            '*/*':
              schema:
                '$ref': '#/components/schemas/RefreshToken'
        '500':
          description: 서버 오류가 발생했습니다. (Internal Server Error)
          content:
            '*/*':
              schema:
                '$ref': '#/components/schemas/RefreshToken'
  '/api/auth/logout':
    post:
      tags:
        - Auth
      summary: 로그아웃
      description: 로그아웃 요청을 처리하고 토큰을 블랙리스트에 등록합니다.
      operationId: logout
      responses:
        '401':
          description: 유효하지 않은 액세스 토큰입니다.
          content:
            '*/*':
              schema:
                '$ref': '#/components/schemas/Logout'
        '500':
          description: 서버 오류가 발생했습니다. (Internal Server Error)
          content:
            '*/*':
              schema:
                '$ref': '#/components/schemas/Logout'
  '/api/auth/login':
    post:
      tags:
        - Auth
      summary: 로그인
      description: 로그인 요청을 처리하고 토큰을 발급합니다.
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              '$ref': '#/components/schemas/Login'
        required: true
      responses:
        '400':
          description: 이메일 또는 비밀번호가 올바르지 않습니다.
          content:
            '*/*':
              schema:
                '$ref': '#/components/schemas/Login'
        '401':
          description: 인증이 필요합니다. (Unauthorized)
          content:
            '*/*':
              schema:
                '$ref': '#/components/schemas/Login'
        '500':
          description: 서버 오류가 발생했습니다. (Internal Server Error)
          content:
            '*/*':
              schema:
                '$ref': '#/components/schemas/Login'
  '/api/quiz/categories':
    get:
      tags:
        - QuizCategory
      summary: 전체 카테고리 목록 조회
      description: 서버에 저장된 모든 퀴즈 카테고리 목록을 조회합니다.
      operationId: getAllCategories
      responses:
        '200':
          description: 카테고리 목록 조회 성공
          content:
            '*/*':
              schema:
                type: array
                items:
                  '$ref': '#/components/schemas/QuizCategoryResponse'
        '500':
          description: 서버 내부 오류
          content:
            '*/*':
              schema:
                type: array
                items:
                  '$ref': '#/components/schemas/QuizCategoryResponse'
  '/api/me':
    get:
      tags:
        - MyProfile
      summary: 개인정보 확인
      description: 사용자가 자신의 개인정보를 확인합니다.
      operationId: getMyProfile
      responses:
        '200':
          description: 개인정보가 성공적으로 조회되었습니다.
          content:
            '*/*':
              schema:
                '$ref': '#/components/schemas/ProfileResponse'
        '401':
          description: 인증이 필요합니다. (Unauthorized)
          content:
            '*/*':
              schema:
                '$ref': '#/components/schemas/ProfileResponse'
        '403':
          description: 접근 권한이 없습니다. (Forbidden)
          content:
            '*/*':
              schema:
                '$ref': '#/components/schemas/ProfileResponse'
        '500':
          description: 서버 오류가 발생했습니다. (Internal Server Error)
          content:
            '*/*':
              schema:
                '$ref': '#/components/schemas/ProfileResponse'
components:
  schemas:
    SignUp:
      type: object
      properties:
        email:
          type: string
          minLength: 1
        nickname:
          type: string
          minLength: 1
          pattern: '^[a-zA-Z0-9]{5,10}$'
        password:
          type: string
          minLength: 1
          pattern: "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$"
    QuizQuestionAnswerResponse:
      type: object
      properties:
        message:
          type: string
        earnedExp:
          type: integer
          format: int32
        level:
          type: integer
          format: int32
    QuizQuestionRequest:
      type: object
      properties:
        categoryId:
          type: integer
          format: int64
    QuizQuestionResponse:
      type: object
      properties:
        questionId:
          type: integer
          format: int64
        questionText:
          type: string
        options:
          type: array
          items:
            type: string
        correctOption:
          type: string
        exp:
          type: integer
          format: int32
        difficulty:
          type: string
          enum:
            - EASY
            - MEDIUM
            - HARD
    RefreshToken:
      type: object
      properties:
        message:
          type: string
        accessToken:
          type: string
        refreshToken:
          type: string
    Logout:
      type: object
      properties:
        message:
          type: string
    Login:
      type: object
      properties:
        email:
          type: string
          minLength: 1
        password:
          type: string
          minLength: 1
          pattern: "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$"
    QuizCategoryResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        category:
          type: string
    ProfileResponse:
      type: object
      properties:
        email:
          type: string
        nickname:
          type: string
        exp:
          type: integer
          format: int32
        level:
          type: integer
          format: int32
  securitySchemes:
    JWT:
      type: http
      name: JWT
      scheme: bearer
      bearerFormat: JWT
